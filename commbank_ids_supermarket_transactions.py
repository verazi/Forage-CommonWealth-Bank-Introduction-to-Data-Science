# -*- coding: utf-8 -*-
"""commbank_ids_supermarket_transactions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CgebY4RKa-8PPwPiFbH22JVsq2pQ4CxF

## Loading Data
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

path = '/content/drive/MyDrive/commonwealth_bank_analysis/supermarket_transactions.xlsx'
df = pd.read_excel(path, index_col=0)

# Display the first 5 rows of the DataFrame
print(df.iloc[:5,])

"""# Question on Forage

## Question 1: Across locations, how many apples were purchased in cash?
"""

apples_cash = df[(df['product_name'] == 'apple') & (df['payment_method'] == 'cash')]

num_apples_cash = apples_cash['quantity'].sum()

print(num_apples_cash)

"""## Queestion 2: How much total cash was spent on these apples?"""

total_cash_spent_on_apples = (apples_cash['quantity'] * apples_cash['unit_price']).sum()

print(total_cash_spent_on_apples)

"""## Question 3: Across all payment methods, how much money was spent at the Bakershire store location by non-member customers?"""

bakershire_nonmember = df[(df['store'] == 'Bakershire') & (df['customer_type'] == 'non-member')]

bakershire_nonmember_total_money = bakershire_nonmember['total_amount'].sum()
print(bakershire_nonmember_total_money)

"""# Data Visualisation"""

import matplotlib.pyplot as plt
import seaborn as sns

# Set the style for seaborn
sns.set(style="whitegrid")

"""## Number of items purchased by product name"""

product_quantity = df.groupby('product_name')['quantity'].sum().reset_index()

# Get the top 10 and bottom 10 products by quantity
top_products = product_quantity.sort_values(by='quantity', ascending=False).head(10)
bottom_products = product_quantity.sort_values(by='quantity').head(10)
combined_products = pd.concat([top_products, bottom_products]).sort_values(by='quantity', ascending=False)
combined_products['group'] = ['Top 10'] * len(top_products) + ['Bottom 10'] * len(bottom_products)

# Plot
plt.figure(figsize=(10, 6))
sns.barplot(x='product_name', y='quantity', data=combined_products, hue='group', palette="hls")
plt.axvline(x=len(top_products) - 0.5, color='gray', linestyle='--', label='Separator Line')
plt.title('Number of Items Purchased by Product Name (Top and Bottom 10)')
plt.xlabel('Product Name')
plt.ylabel('Total Quantity Purchased')
plt.xticks(rotation=45)
plt.legend(title='Group')
plt.tight_layout()
plt.show()

"""## Total amount spent by store"""

store_revenue = df.groupby('store')['total_amount'].sum().reset_index()

# Get the top 10 and bottom 10 stores by rev
top_stores = store_revenue.sort_values(by='total_amount', ascending=False).head(10)
bottom_stores = store_revenue.sort_values(by='total_amount').head(10)
combined_stores = pd.concat([top_stores, bottom_stores]).sort_values(by='total_amount', ascending=False)
combined_stores['group'] = ['Top 10'] * len(top_stores) + ['Bottom 10'] * len(bottom_stores)

# Plot
plt.figure(figsize=(10, 6))
sns.barplot(x='store', y='total_amount', data=combined_stores, hue='group', palette='husl')
plt.axvline(x=len(top_products) - 0.5, color='gray', linestyle='--', label='Separator Line')

# Set y-axis limits to start from the minimum total amount
max_amount = combined_stores['total_amount'].max()
min_amount = combined_stores['total_amount'].min()
plt.ylim(top=(max_amount+300), bottom=(min_amount-300))

plt.title('Total Amount Spent by Store (Top and Bottom 10)')
plt.xlabel('Store')
plt.ylabel('Total Amount Spent ($)')
plt.xticks(rotation=45)
plt.legend(title='Group')
plt.tight_layout()
plt.show()

"""### Distribution of payment methods"""

# Get the counts of each payment method
payment_methods = df['payment_method'].value_counts().reset_index()

# Plot
plt.figure(figsize=(5, 5))
plt.pie(payment_methods['count'], labels=payment_methods['payment_method'], autopct='%1.1f%%', startangle=140, colors=sns.color_palette('Set2', len(payment_methods)+3))
plt.title('Distribution of Payment Methods')
plt.tight_layout()
plt.show()

"""## Spending by customer type"""

customer_spending = df.groupby('customer_type')['total_amount'].sum().reset_index()

plt.figure(figsize=(6, 6))
sns.barplot(x='customer_type', y='total_amount', data=customer_spending, palette='Spectral')
# Set y-axis limits to start from the minimum total amount
max_spending = customer_spending['total_amount'].max()
min_spending = customer_spending['total_amount'].min()
plt.ylim(top=(max_spending+500), bottom=(min_spending-500))


plt.title('Total Amount Spent by Customer Type')
plt.xlabel('Customer Type')
plt.ylabel('Total Amount Spent ($)')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()